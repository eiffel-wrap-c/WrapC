Grammar

rule 1 input -> -- Empty
rule 2 input -> input macro
rule 3 macro -> TOK_ID
rule 4 macro -> TOK_ID TOK_DEFINITION
rule 5 macro -> TOK_ID TOK_LPAREN arguments TOK_RPAREN
rule 6 macro -> TOK_ID TOK_LPAREN arguments TOK_RPAREN TOK_DEFINITION
rule 7 arguments -> TOK_ID
rule 8 arguments -> arguments TOK_COMMA TOK_ID

Terminals, with rules where they appear

$ (token 0)
error (token 256)
$undefined. (token 257)
TOK_ID (token 258) 3 4 5 6 7 8
TOK_DEFINITION (token 259) 4 6
TOK_LPAREN (token 260) 5 6
TOK_RPAREN (token 261) 5 6
TOK_COMMA (token 262) 8

Nonterminals, with rules where they appear

macro (0) on left: 3 4 5 6, on right: 2
arguments (1) on left: 7 8, on right: 5 6 8
input (2) on left: 1 2, on right: 2


state 0

	input  ->  .   (rule 1)
	input  ->  . input macro   (rule 2)

	$default	reduce using rule 1 (input)

	input	go to state 1



state 1

	input  ->  input . macro   (rule 2)
	macro  ->  . TOK_ID   (rule 3)
	macro  ->  . TOK_ID TOK_DEFINITION   (rule 4)
	macro  ->  . TOK_ID TOK_LPAREN arguments TOK_RPAREN   (rule 5)
	macro  ->  . TOK_ID TOK_LPAREN arguments TOK_RPAREN TOK_DEFINITION   (rule 6)

	TOK_ID	shift, and go to state 2
	$	go to state 12

	macro	go to state 3



state 2

	macro  ->  TOK_ID .   (rule 3)
	macro  ->  TOK_ID . TOK_DEFINITION   (rule 4)
	macro  ->  TOK_ID . TOK_LPAREN arguments TOK_RPAREN   (rule 5)
	macro  ->  TOK_ID . TOK_LPAREN arguments TOK_RPAREN TOK_DEFINITION   (rule 6)

	TOK_LPAREN	shift, and go to state 4
	TOK_DEFINITION	shift, and go to state 5

	$default	reduce using rule 3 (macro)



state 3

	input  ->  input macro .   (rule 2)

	$default	reduce using rule 2 (input)



state 4

	macro  ->  TOK_ID TOK_LPAREN . arguments TOK_RPAREN   (rule 5)
	macro  ->  TOK_ID TOK_LPAREN . arguments TOK_RPAREN TOK_DEFINITION   (rule 6)
	arguments  ->  . TOK_ID   (rule 7)
	arguments  ->  . arguments TOK_COMMA TOK_ID   (rule 8)

	TOK_ID	shift, and go to state 6

	arguments	go to state 7



state 5

	macro  ->  TOK_ID TOK_DEFINITION .   (rule 4)

	$default	reduce using rule 4 (macro)



state 6

	arguments  ->  TOK_ID .   (rule 7)

	$default	reduce using rule 7 (arguments)



state 7

	macro  ->  TOK_ID TOK_LPAREN arguments . TOK_RPAREN   (rule 5)
	macro  ->  TOK_ID TOK_LPAREN arguments . TOK_RPAREN TOK_DEFINITION   (rule 6)
	arguments  ->  arguments . TOK_COMMA TOK_ID   (rule 8)

	TOK_COMMA	shift, and go to state 8
	TOK_RPAREN	shift, and go to state 9



state 8

	arguments  ->  arguments TOK_COMMA . TOK_ID   (rule 8)

	TOK_ID	shift, and go to state 10



state 9

	macro  ->  TOK_ID TOK_LPAREN arguments TOK_RPAREN .   (rule 5)
	macro  ->  TOK_ID TOK_LPAREN arguments TOK_RPAREN . TOK_DEFINITION   (rule 6)

	TOK_DEFINITION	shift, and go to state 11

	$default	reduce using rule 5 (macro)



state 10

	arguments  ->  arguments TOK_COMMA TOK_ID .   (rule 8)

	$default	reduce using rule 8 (arguments)



state 11

	macro  ->  TOK_ID TOK_LPAREN arguments TOK_RPAREN TOK_DEFINITION .   (rule 6)

	$default	reduce using rule 6 (macro)



state 12


	$	go to state 13



state 13


	$default	accept
